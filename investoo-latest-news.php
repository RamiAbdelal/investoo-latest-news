<?php

/**
 * Investoo Latest News
 *
 * @link              http://www.investoogroup.com/
 * @since             1.0.0
 * @package           investoo_latest_news
 *
 * @wordpress-plugin
 * Plugin Name:       Investoo Latest News
 * Plugin URI:        http://www.investoogroup.com/
 * Description:       Enter a shortcode to display your latest posts within WordPress. Include a title and a number to limit the number of posts you'd like to display.  
 * Version:           1.0.0
 * Author:            Rami Abdelal
 * Author URI:        http://www.investoogroup.com/
 * License:           GPL-2.0+
 * License URI:       http://www.gnu.org/licenses/gpl-2.0.txt
 * Text Domain:       investoo-latest-news
 */

if ( ! defined( 'ABSPATH' ) ) exit;

/**
 * This runs init and when the plugin is active.
 * 
 */

function investoo_latest_news_init() {

    /**
     * Initialise admin menu and settings page if user is an admin
     * 
     */

    if ( is_admin() ) {
    
        /**
         * Include admin dependencies
         * 
         */
        
        require_once plugin_dir_path( __FILE__ ) . 'admin/admin-menu.php';
        require_once plugin_dir_path( __FILE__ ) . 'admin/admin-settings.php';

    }
            
    /**
     * Initialises the Investoo Latest News shortcode and public JS and CSS
     * 
     */

    function investoo_latest_news_register_shortcodes() {

        add_shortcode( 'investoo-latest-news', 'investoo_latest_news_do_shortcodes' );
        add_filter( 'the_posts', 'investoo_latest_news_shortcode_scripts_styles' );

    }

    /**
     * Loads scripts and styles for specific shortcodes only when the correct shortcode is found.
     * This is used as a callback function for investoo_latest_news_register_shortcodes().
     * 
     * @param   object  $posts  the_posts filter passes WP_Post objects which we used to find shortcodes
     * @return  object  $posts  Returns post objects for the_posts filter  
     * 
     */

    function investoo_latest_news_shortcode_scripts_styles( $posts ) {

        // If there's nothing to do anything with, just return the posts.

        if ( empty( $posts ) ) return $posts;

        // Initialise the flag we'll use to determine whether or not a shortcode was found.

        $shortcode_found = false;

        // Now loop through the posts given

        foreach ( $posts as $post ) {

            if ( stripos( $post->post_content, '[investoo-latest-news' ) !== false ) {

                // If we find the one of our shortcodes, record the fact and stop looking.

                $shortcode_found = true;
                break;

            }

        }

        // If we find a shortcode all shortcodes found prompt the following styles and scripts

        if ( $shortcode_found ) {

            // CSS and fonts

            wp_enqueue_style( 'invest-latest-news-fonts',  'https://fonts.googleapis.com/css?family=Lato' );
            wp_enqueue_style( 'investoo-latest-news-public-css', plugin_dir_url( __FILE__ ) . 'public/css/style.css' );

            // JS

            wp_register_script( "investoo-latest-news-public-js", plugin_dir_url( __FILE__ ) . 'public/js/script.js', array( 'jquery' ), null, true );

            // Enqueue JS

            wp_enqueue_script( 'investoo-latest-news-public-js' );

        }

        return $posts;

    }

    /**
     * Finds and replaces shortcodes to output the main plugin functionality: a latest posts shortcode.
     * While this is used by WP's Shortcode API, one can use this on their own manually without do_shortcode().
     * 
     * Simply call the function which prints out the content. Optionally you can pass in an associative array
     * instead of using shortcode attributes.
     * 
     * @param   array   $atts           Optional. Shortcode attributes are passed in as an associative array here, e.g:
     *                                  $atts = array(
     *                                      "title" => "Latest Posts"   // Optional string, defaults to Latest Posts.
     *                                      "limit" => 3                // Optional int, defaults to 3 posts.
     *                                  )
     * @return  string  $posts_list     Returns the content generated by investoo_latest_news_get_posts() according to the passed in parameters.
     * 
     */

    function investoo_latest_news_do_shortcodes( $atts ) {

        // Get attributes from passed in array if they exist

        $limit = ! empty( $atts["limit"] ) ? $atts["limit"] : false;
        $title = ! empty( $atts["title"] ) ? $atts["title"] : false;

        // Get the posts and return them

        $posts_list = investoo_latest_news_get_posts( $title, $limit );

        return $posts_list;

    }

    investoo_latest_news_register_shortcodes();
    
}

/**
 * The latest posts list is generated here. The returned HTML is put together in PHP because of preference, and since the HTML
 * generated here is relatively simple, we won't lose out on much of the benefits of HTML colour coding or hinting in your favourite editor.
 * 
 * @param   string  $title              Optional string to title the collection of posts, defaults to "Latest Posts".
 * @param   int     $limit              Optional integer used to limit the number of posts returned, defaults to 3.
 * @return  string  $posts              The posts are taken from the loop according to any parameters passed in and returned as an HTML string.
 */

function investoo_latest_news_get_posts( $title = false, $limit = false ) {

    // If a title was included, use it, or use Latest Posts. This could be stored in a default options function instead.

    $title = ! empty( $title ) ? $title : __( "Latest Posts", "investoo_latest_news" );

    // If a number greater than 0 was included, use it, otherwise default to 3. This number could instead be stored in a default options function that can be used in place of user specified options retrieved from get_option()

    $limit = intval( $limit ) > 0 ? intval( $limit ) : 3;

    // Prepare input array for wp_get_recent_posts()

    $args = array( "numberposts" => $limit );

    // Get the posts as an array of objects

    $posts_array = wp_get_recent_posts( $args, "OBJECT" );

    // Start with the post container and the title, then we loop through each post adding markup to the $posts variable

    $posts = "<div class='investoo-latest-news-container'>";
    $posts .= "<h5 class='investoo-latest-news-title'>" . $title . "</h5>";

    foreach ( $posts_array as $post ) {

        // Get the permalink for this post, or if for some reason it doesn't exist, the home url

        $permalink = get_permalink( $post ) ? get_permalink( $post ) : home_url();

        // Then for each post object in the post array, we create a subcontainer with the class investoo-latest-news-single-post

        $posts .= "<a href='$permalink' class='investoo-latest-news-single-post'>";

        // Image container goes first

        $posts .= "<div class='investoo-latest-news-single-image'>";

        // Get the posts thumbnail image url and widths and heights if they exist, or use a placeholder from the web at 150x150 pixels which is the default WordPress image thumbnail size

        $post_image   = ! empty( wp_get_attachment_image_src( get_post_thumbnail_id( $post ) ) ) ? wp_get_attachment_image_src( get_post_thumbnail_id( $post ) ) : false;
        $image        = ! empty( $post_image ) ? $post_image[0] : "https://via.placeholder.com/150x150";
        $image_width  = ! empty( $post_image ) ? $post_image[1] : 150;
        $image_height = ! empty( $post_image ) ? $post_image[2] : 150;

        // Insert the image

        $posts .= "<img src='$image' width='$width' height='$height' alt='$post->post_title'>";

        // Close image container

        $posts .= "</div>";

        // Content container goes second

        $posts .= "<div class='investoo-latest-news-single-content'>";

        // In each post as referred to in this block, content consists of the post title as a heading (currently h6) and the author and authored dates as <small> subtitles. We'll start with the title

        $posts .= "<h6 class='investoo-latest-news-single-title'>";

        // Now we want to manually truncate the title if it's longer than 50 characters. This is a great candidate for inclusion as a modifiable attribute, or as a settings field. Otherwise, we could do this via CSS or JavaScript, with either being able to easily truncate depending on the number of lines output. 

        $maximum_title_length = 50;

        // If the title length is longer than the maximum length, we truncate it from characters 0 to $maximum_title_length and add three ellipses to the end, otherwise we just use the given title.

        $short_title = strlen( $post->post_title ) > $maximum_title_length ? substr( $post->post_title, 0, $maximum_title_length ) . "..." : $post->post_title;

        // Enter the title and close its tag.

        $posts .= $short_title . "</h6>";

        // Here we try to get the author's display name capitalised. If for some reason the author ID isn't valid, we'll use the website name instead. Perhaps instead of display_name we could concatenate first and last name, or use the nicename, but this seems to be default Twenty Seventeen behaviour as far as I can tell so I'll stick with this.

        $author_name = ! empty( get_userdata( $post->post_author ) ) ? ucfirst( get_userdata( $post->post_author )->display_name ) : get_bloginfo( "name" );

        // Now we add the author's name preceded by By

        $posts .= "<small class='investoo-latest-news-single-subtitle'>By " . $author_name . "</small>";

        // Now we enter the authored time formatted to the format set in the WordPress settings area

        $posts .= "<small class='investoo-latest-news-single-subtitle'>" . __( "Posted", "investoo_latest_news" ) . " " . date( get_option( "date_format" ), strtotime( $post->post_date ) ) . "</small>";

        // Close the content container tag

        $posts .= "</div>";

        // Close the anchor tag

        $posts .= "</a>";

    }

    // Close the widget tag and return the HTML string

    $posts .= "</div>";

    return $posts;

}

// Initialise

add_action( 'init', 'investoo_latest_news_init' );